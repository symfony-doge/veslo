
# This file is part of the Veslo project <https://github.com/symfony-doge/veslo>.
#
# (C) 2019 Pavel Petrov <itnelo@gmail.com>.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.
#
# @license https://opensource.org/licenses/GPL-3.0 GPL-3.0

version: '2'

services:
    app:
        build:
            context: ./docker/${APP_ENV}/app
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                PHP_VERSION: ${PHP_VERSION}
                DEPLOYMENT_PATH: ${DEPLOYMENT_PATH}
        networks:
            backend:
                ipv4_address: 172.101.1.1
        extra_hosts:
            # networks.backend.ipam.config.0.gateway
            - "host-machine:172.101.0.1"
        depends_on:
            - db
            - redis
        volumes:
            - ${SYMFONY_APP_PATH}:${DEPLOYMENT_PATH}
            - ${SYMFONY_APP_PATH}/var/.composer:/var/www/.composer
            - ${SYMFONY_APP_PATH}/var/.yarn:/var/www/.yarn
            - ${SYMFONY_APP_PATH}/var/.yarn/cache:/var/www/.cache/yarn
            - ${SYMFONY_APP_PATH}/var/.yarn/.yarnrc:/var/www/.yarnrc

    db:
        image: postgres:${POSTGRES_VERSION}
        networks:
            frontend:
                ipv4_address: 172.100.3.1
            backend:
                ipv4_address: 172.101.3.1
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: ${POSTGRES_DATA_DIR}
        volumes:
            - db_data:${POSTGRES_DATA_DIR}

    redis:
        build:
            context: ./docker/${APP_ENV}/redis
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                REDIS_VERSION: ${REDIS_VERSION}
                REDIS_DATA_DIR: ${REDIS_DATA_DIR}
        networks:
            frontend:
                ipv4_address: 172.100.4.1
            backend:
                ipv4_address: 172.101.4.1
        volumes:
            - redis_data:${REDIS_DATA_DIR}

    mq:
        build:
            context: ./docker/${APP_ENV}/mq
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                RABBITMQ_VERSION: ${RABBITMQ_VERSION}
                RABBITMQ_DATA_DIR: ${RABBITMQ_DATA_DIR}
                RABBITMQ_CONFIG_FILE: ${RABBITMQ_CONFIG_FILE}
        networks:
            backend:
                ipv4_address: 172.101.7.1
        hostname: ${RABBITMQ_NODENAME}
        ports:
            - "${RABBITMQ_MANAGEMENT_PORT_EXPOSE}:15672"
        environment:
            RABBITMQ_NODENAME: ${RABBITMQ_NODENAME}
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
            RABBITMQ_CONFIG_FILE: ${RABBITMQ_CONFIG_FILE}
            RABBITMQ_DATA_DIR: ${RABBITMQ_DATA_DIR}
            RABBITMQ_LOG_BASE: ${RABBITMQ_LOG_BASE}
        volumes:
            - mq_data:${RABBITMQ_DATA_DIR}
            - ${SYMFONY_APP_PATH}/var/logs/rabbitmq:${RABBITMQ_LOG_BASE}

    nginx:
        build:
            context: ./docker/${APP_ENV}/nginx
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                NGINX_VERSION: ${NGINX_VERSION}
                NGINX_PORT_EXPOSE: ${NGINX_PORT_EXPOSE}
        networks:
            frontend:
                ipv4_address: 172.100.1.1
            backend:
                ipv4_address: 172.101.8.1
                aliases:
                    - veslo.test
        depends_on:
            - php-fpm
        ports:
            - "${NGINX_PORT_EXPOSE}:80"
        volumes_from:
            - app
        volumes:
            - ${SYMFONY_APP_PATH}/var/logs/nginx:/var/log/nginx

    php-fpm:
        build:
            context: ./docker/${APP_ENV}/php-fpm
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                PHP_VERSION: ${PHP_VERSION}
        networks:
            frontend:
                ipv4_address: 172.100.2.1
        volumes_from:
            - app

    supervisor:
        build:
            context: ./docker/${APP_ENV}/supervisor
            args:
                HOST_UID: ${HOST_UID}
                TIMEZONE: ${TIMEZONE}
                PHP_VERSION: ${PHP_VERSION}
                SUPERVISOR_VERSION: ${SUPERVISOR_VERSION}
        networks:
            backend:
                ipv4_address: 172.101.2.1
        depends_on:
            - db
            - redis
            - mq
        volumes_from:
            - app
        volumes:
            - ${SYMFONY_APP_PATH}/var/logs/supervisord:/var/log/supervisord

    selenium-hub:
        image: selenium/hub:${SELENIUM_HUB_VERSION}
        networks:
            backend:
                ipv4_address: 172.101.5.1
        environment:
            GRID_MAX_SESSION: 200
            GRID_NEW_SESSION_WAIT_TIMEOUT: -1
            GRID_TIMEOUT: 120
            GRID_BROWSER_TIMEOUT: 120

    selenium-node-chrome:
        image: selenium/node-chrome:${SELENIUM_NODE_CHROME_VERSION}
        networks:
            backend:
                ipv4_address: 172.101.6.1
        volumes:
            - /dev/shm:/dev/shm
        depends_on:
            - selenium-hub
        environment:
            HUB_HOST: selenium-hub
            NODE_MAX_INSTANCES: 100
            NODE_MAX_SESSION: 100
        privileged: true

networks:
    # Endpoints: nginx
    frontend:
        driver: bridge
        ipam:
            driver: default
            config:
                -    subnet: 172.100.0.0/16
                     gateway: 172.100.0.1
    # Endpoints: app, supervisor (background tasks)
    # docker-compose run --rm --no-deps app -d xdebug.remote_autostart=1 -d xdebug.remote_host=172.101.0.1 bin/console
    # Alias 'host-machine' can be used for xdebug.remote_host parameter instead of IP (see 'services.app.extra_hosts')
    # xdebug.remote_autostart=1 will be enough for starting a debug session (see docker-php-ext-xdebug.ini for app)
    backend:
        driver: bridge
        ipam:
            driver: default
            config:
                -    subnet: 172.101.0.0/16
                     gateway: 172.101.0.1

volumes:
    db_data:
        driver: local
        driver_opts:
            type: none
            device: ${PWD}/var/postgresql/data
            o: bind
    redis_data:
        driver: local
        driver_opts:
            type: none
            device: ${PWD}/var/redis/data
            o: bind
    mq_data:
        driver: local
        driver_opts:
            type: none
            device: ${PWD}/var/rabbitmq
            o: bind
