imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: doctrine.yml }
    - { resource: services.yml }
    - { resource: bundles/veslo_app.yml }
    - { resource: bundles/veslo_anthill.yml }
    - { resource: bundles/veslo_sanity.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: '%app.locale%'

framework:
    #esi: ~
    translator:
        fallbacks:
            - 'en'
    default_locale: '%locale%'
    secret: '%app.secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    workflows:
        # Represents whole vacancy researching process, implemented for readability purposes
        vacancy_research:
            type: 'workflow'
            marking_store:
                service: 'veslo.app.workflow.vacancy.research.marking_store'
            supports:
                - Veslo\AppBundle\Workflow\Vacancy\Research\Conveyor\Payload
            # At first step vacancy URL will be found in the internet using roadmap
            initial_place: found
            places:
                - found
                - parsed
                - collected
                - indexed
            # Each transition has its own queue for workers, ex. "veslo.app.workflow.vacancy_research.to_parse"
            transitions:
                # At second step vacancy data will be retrieved from website using URL
                to_parse:
                    from: found
                    to: parsed
                # At third step vacancy data will be synchronized with current schema and stored for analysis
                to_collect:
                    from: parsed
                    to: collected
                # At fourth step vacancy will be analysed via sanity criteria and get its rating
                to_index:
                    from: collected
                    to: indexed
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines:
            - 'twig'
    property_info:
        enabled: true
    cache:
        app: 'cache.adapter.redis'
        default_redis_provider: 'redis://%app.redis.host%:%app.redis.port%/10'
        pools:
            cache.app.anthill:
                adapter: 'cache.adapter.redis'
                provider: 'redis://%app.redis.host%:%app.redis.port%/1'
            cache.app.sanity:
                adapter: 'cache.adapter.redis'
                provider: 'redis://%app.redis.host%:%app.redis.port%/2'
            cache.app.single_session:
                adapter: 'veslo.app.cache.array.no_serialization'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets:
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
    php_errors:
        log: true

sensio_framework_extra:
    router:
        annotations: false

twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        app_name: '%app.name%'
        truncate_separator: '...'

swiftmailer:
    transport: '%app.mailer_transport%'
    host: '%app.mailer_host%'
    username: '%app.mailer_user%'
    password: '%app.mailer_password%'
    spool: { type: memory }

monolog:
    channels:
        - 'app.http'
        - 'app.workflow'
        - 'anthill.digging'
        - 'anthill.parsing'
        - 'anthill.collecting'
        - 'sanity.indexing'

nelmio_alice:
    # Default locale for the Faker Generator
    locale: 'en_US'
    # Value used make sure Faker generates data consistently across runs, set to null to disable.
    seed: ~
    # Some Faker formatter may have the same name as PHP native functions. PHP functions have the priority,
    # so if you want to use a Faker formatter instead, blacklist this function here
    functions_blacklist:
        - 'current'
    # Alice may do some recursion to resolve certain values.
    # This parameter defines a limit which will stop the resolution once reached.
    loading_limit: 5
    # Maximum number of time Alice can try to generate a unique value before stopping and failing.
    max_unique_values_retry: 150

knp_paginator:
    template:
        pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'
    page_range: 7

symfony_doge_motc:
    transport:
        http: 'veslo.app.http.client.base'
    credentials:
        authorization_token: '%symfony_doge_motc.credentials.authorization_token%'
    api:
        base_uri: '%symfony_doge_motc.api.base_uri%'
        requests:
            index:
                path: '/index'
            get_tag_groups:
                path: '/tag/groups'
